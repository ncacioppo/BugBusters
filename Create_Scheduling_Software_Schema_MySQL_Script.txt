# Creates tables in scheduler schema and fills course table with values from csv files
# NOTE: csv files must be stored in the same directory as the MySQLServer
USE schemabugbuster;

DROP TABLE IF EXISTS schedule_course;
DROP TABLE IF EXISTS schedule;
DROP TABLE IF EXISTS user_minors;
DROP TABLE IF EXISTS minor;
DROP TABLE IF EXISTS user_majors;
DROP TABLE IF EXISTS major;
DROP TABLE IF EXISTS user;
DROP TABLE IF EXISTS course;
DROP TABLE IF EXISTS department;

## Create tables in BugBuster scheduler database
# Tables include:
#   department
#	course
#	user
#   major
#   minor
# 	user_majors
# 	user_minors
#	schedule
# 	schedule_course

CREATE TABLE IF NOT EXISTS department(
    Dept VARCHAR(4) NOT NULL,
	CONSTRAINT pk_dept PRIMARY KEY(Dept)
);

CREATE TABLE IF NOT EXISTS course(
    Year INT(4) NOT NULL,
    Semester VARCHAR(15),
    Dept VARCHAR(4) NOT NULL,
    CourseCode INT(3),
    Section VARCHAR(1),
    CourseName VARCHAR(70) NOT NULL,
    Hours INT(1) NOT NULL,
    Capacity INT(3),
    Enrolled INT(3),
    Monday VARCHAR(1),
    Tuesday VARCHAR(1),
    Wednesday VARCHAR(1),
    Thursday VARCHAR(1),
    Friday VARCHAR(1),
    StartTime TIME,
    EndTime TIME,
    LNameInstructor VARCHAR(20),
    FNameInstructor VARCHAR(20),
    PrefFNameInstructor VARCHAR(20),
    Comments VARCHAR(200)
--    Description VARCHAR(2000),
);

CREATE TABLE IF NOT EXISTS user(
	UserID INT(6) NOT NULL AUTO_INCREMENT,
    Username VARCHAR(20) UNIQUE,
    Password VARCHAR(20),
    FName VARCHAR(20),
    LName VARCHAR(20),
    GradYear INT(4),
    GradMonth VARCHAR(10),
    CONSTRAINT pk_user PRIMARY KEY(UserID)
);

CREATE TABLE IF NOT EXISTS major(
	MajorID INT(6) NOT NULL AUTO_INCREMENT,
    ArtSci VARCHAR(20),
    Title VARCHAR(40) NOT NULL,
    Dept VARCHAR(4) NOT NULL,
    StartYear INT(4),
    EndYear INT(4),
    CONSTRAINT pk_major PRIMARY KEY(MajorID),
    CONSTRAINT fk_major_department FOREIGN KEY(Dept) REFERENCES department(Dept)
);

CREATE TABLE IF NOT EXISTS user_majors(
	UserID INT(6) NOT NULL,
    Dept VARCHAR(4) NOT NULL,
    MajorID INT(3) NOT NULL,
-- 	Title VARCHAR(40) NOT NULL,
    ReqYear INT(4) NOT NULL,
    CONSTRAINT pk_user_major PRIMARY KEY(UserID, MajorID),
    CONSTRAINT fk_user_major_user FOREIGN KEY(UserID) REFERENCES user(UserID),
    CONSTRAINT fk_user_major_major FOREIGN KEY(MajorID) REFERENCES major(MajorID),
    CONSTRAINT fk_user_major_department FOREIGN KEY(Dept) REFERENCES department(Dept)
    );

CREATE TABLE IF NOT EXISTS minor(
	MinorID INT(6) NOT NULL AUTO_INCREMENT,
    Dept VARCHAR(4) NOT NULL,
    Title VARCHAR(40) NOT NULL,
    StartYear INT(4),
    EndYear INT(4),
    CONSTRAINT pk_minor PRIMARY KEY(MinorID),
    CONSTRAINT fk_minor_department FOREIGN KEY(Dept) REFERENCES department(Dept)
);

CREATE TABLE IF NOT EXISTS user_minors(
	UserID INT(6) NOT NULL,
    MinorID INT(3) NOT NULL,
--  Title VARCHAR(40) NOT NULL,
    ReqYear INT(4) NOT NULL,
    Dept VARCHAR(4),
    CONSTRAINT pk_user_minor PRIMARY KEY(UserID, MinorID),
    CONSTRAINT fk_user_minor_user FOREIGN KEY(UserID) REFERENCES user(UserID),
    CONSTRAINT fk_user_minor_minor FOREIGN KEY(MinorID) REFERENCES minor(MinorID)
    );

CREATE TABLE IF NOT EXISTS schedule(
	ScheduleID INT(8) NOT NULL AUTO_INCREMENT,
    UserID INT(6) NOT NULL DEFAULT 0,
    Name VARCHAR(50) NOT NULL,
    Year INT(4) NOT NULL,
    Semester VARCHAR(15) NOT NULL,
    CONSTRAINT pk_schedule PRIMARY KEY(ScheduleID),
    CONSTRAINT fk_schedule_user FOREIGN KEY(UserID) REFERENCES user(UserID)
);


CREATE TABLE IF NOT EXISTS schedule_course(
    UserID INT(6) NOT NULL,			-- included to reduce processing times
    ScheduleID INT(8) NOT NULL,
    CourseID INT(6) NOT NULL,
    CONSTRAINT pk_schedule_course PRIMARY KEY(ScheduleID, CourseID),
    CONSTRAINT fk_user_schedule_user FOREIGN KEY(UserID) REFERENCES user(UserID),
    CONSTRAINT fk_user_schedule_schedule FOREIGN KEY(ScheduleID) REFERENCES schedule(ScheduleID)
--    CONSTRAINT fk_user_schedule_course FOREIGN KEY(CourseID) REFERENCES course(CourseID)
);
